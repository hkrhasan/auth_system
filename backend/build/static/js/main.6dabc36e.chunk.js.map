{"version":3,"sources":["reducers/auth.js","reducers/index.js","actions/types.js","store.js","containers/Home.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["initialState","access","localStorage","getItem","refresh","isAuthenticated","user","combineReducers","auth","state","action","type","payload","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Home","className","to","role","load_user","dispatch","a","config","headers","axios","get","process","res","data","connect","login","email","password","body","JSON","stringify","post","useState","setEmail","setPassword","on","onSubmit","e","preventDefault","name","placeholder","value","onChange","target","required","minLength","signup","re_password","accountCreated","setAccountCreated","setName","setRePassword","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","maxWidth","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","setNewPassword","setReNewPassword","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","checkAuthenticated","window","code","props","useEffect","children","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dabc36e.chunk.js","sourcesContent":["import {\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_Fail,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_Fail,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  LOGOUT,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_Fail,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_Fail,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  access: localStorage.getItem(\"access\"),\r\n  refresh: localStorage.getItem(\"refresh\"),\r\n  isAuthenticated: null,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case AUTHENTICATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true\r\n      }\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"access\", payload.access);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false\r\n      }\r\n    case USER_LOADED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n    case USER_LOADED_Fail:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n      case AUTHENTICATED_FAIL:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: false\r\n        }\r\n    case LOGIN_Fail:\r\n    case SIGNUP_Fail:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      return {\r\n        ...state,\r\n        access: null,\r\n        refresh: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n    case PASSWORD_RESET_CONFIRM_FAIL:\r\n    case PASSWORD_RESET_SUCCESS:\r\n    case PASSWORD_RESET_FAIL:\r\n    case ACTIVATION_SUCCESS:\r\n    case ACTIVATION_Fail:\r\n      return {\r\n        ...state\r\n      }\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_Fail = \"LOGIN_Fail\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_Fail = \"SIGNUP_Fail\";\r\nexport const ACTIVATION_SUCCESS = \"ACTIVATION_SUCCESS\";\r\nexport const ACTIVATION_Fail = \"ACTIVATION_Fail\";\r\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\r\nexport const USER_LOADED_Fail = \"USER_LOADED_Fail\";\r\nexport const AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\";\r\nexport const AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\";\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => (\r\n    <div className='container mt-3'>\r\n        <div className='jumbotron'>\r\n            <h1 className='display-4'>Welcome To Auth System</h1>\r\n            <p className='lead'>This is an incridible authentication system with production level features!</p>\r\n            <hr className='my-4' />\r\n            <p>Click the Log in button</p>\r\n            <Link to='/login' className='btn btn-primary btn-lg' role='button'>Login</Link>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_Fail,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_Fail,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  LOGOUT,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_Fail,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_Fail\r\n} from \"./types\";\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n  if (typeof window == 'undefined') {\r\n    dispatch({\r\n      type: LOGIN_Fail,\r\n    });\r\n  }\r\n\r\n  if (localStorage.getItem('access')) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n\r\n        if (res.data.code !== 'token_not_valid') {\r\n          dispatch({\r\n            type: AUTHENTICATED_SUCCESS\r\n          })\r\n\r\n        } else {\r\n            dispatch({\r\n              type: AUTHENTICATED_FAIL\r\n            })\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n          type: AUTHENTICATED_FAIL\r\n        })  \r\n      }\r\n\r\n  } else {\r\n      dispatch({\r\n        type: AUTHENTICATED_FAIL\r\n      })\r\n  }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `JWT ${localStorage.getItem(\"access\")}`,\r\n        \"Accept\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: USER_LOADED_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: USER_LOADED_Fail,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: USER_LOADED_Fail,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(load_user());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_Fail,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signup = ({ name, email, password, re_password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n  try {\r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SIGNUP_Fail,\r\n    });\r\n  }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ uid, token });\r\n\r\n  try {\r\n    await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n    dispatch({\r\n      type: ACTIVATION_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ACTIVATION_Fail\r\n    });\r\n  }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n          type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PASSWORD_RESET_FAIL\r\n      });\r\n    }\r\n\r\n}\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n  try {\r\n    await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_FAIL\r\n    });\r\n  }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({\r\n    type: LOGOUT\r\n  })\r\n}","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [email, setEmail] = useState('');  \r\n  const [password, setPassword] = useState('');  \r\n\r\n\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Sign In</h1>\r\n      <p>Sign into your Account</p>\r\n      <form on onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            minLength=\"6\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-3\">\r\n        Don't have an account? <Link to=\"/signup\">Signup</Link>\r\n      </p>\r\n      <p className=\"mt-3\">\r\n        Forgot ypur Password? <Link to=\"/reset-password\">Reset Password</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signup } from \"../actions/auth\";\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n  const [accountCreated, setAccountCreated] = useState(false);  \r\n  const [email, setEmail] = useState('');  \r\n  const [password, setPassword] = useState('');  \r\n  const [name, setName] = useState('');  \r\n  const [re_password, setRePassword] = useState('');  \r\n\r\n\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (password === re_password) {\r\n        signup({ name, email, password, re_password });\r\n        setAccountCreated(true)\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  if (accountCreated) {\r\n    return <Redirect to='/login' />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Sign Up</h1>\r\n      <p>Create your Account</p>\r\n      <form on onSubmit={(e) => onSubmit(e)}>\r\n      <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Name*\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email*\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password*\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            minLength=\"6\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"re_password\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password*\"\r\n            value={re_password}\r\n            onChange={(e) => setRePassword(e.target.value)}\r\n            minLength=\"6\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n            Register\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-3\">\r\n        Already have an account? <Link to=\"/login\">Login</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { verify } from \"../actions/auth\";\r\n\r\nconst Activate = ({ verify, match }) => {\r\n    const [verified, setVerified] = useState(false)\r\n    \r\n    const verify_account = () => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n        verify(uid, token)\r\n        setVerified(true)\r\n    }\r\n\r\n\r\n  if (verified) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <div\r\n            className='d-flex flex-column justify-content-center align-item-center'\r\n            style={{ marginTop: '200px' }}\r\n        >\r\n            <h1>Verify Your Account:</h1>\r\n            <button\r\n                onClick={verify_account}\r\n                style={{ marginTop: '50px', maxWidth: '100px' }}\r\n                className='btn btn-primary'\r\n            >\r\n                Verify\r\n            </button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password } from \"../actions/auth\";\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [email, setEmail] = useState('');  \r\n\r\n\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    reset_password(email);\r\n    setRequestSent(true)\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Request Password Reset:</h1>\r\n      <form on onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [new_password, setNewPassword] = useState('');  \r\n    const [re_new_password, setReNewPassword] = useState('');  \r\n\r\n\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n\r\n    reset_password_confirm(uid, token, new_password, re_new_password);\r\n    setRequestSent(true)\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Request Password Reset:</h1>\r\n      <form on onSubmit={(e) => onSubmit(e)}>\r\n      <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"new_password\"\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            value={new_password}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            minLength=\"6\"\r\n            required\r\n          />\r\n        </div>\r\n      <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"re_new_password\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm New Password\"\r\n            value={re_new_password}\r\n            onChange={(e) => setReNewPassword(e.target.value)}\r\n            minLength=\"6\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\nimport { Fragment } from 'react';\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <Link to='/login' className='nav-link' >Login</Link>\r\n            <Link to='/signup' className='nav-link' >Signup</Link>\r\n        </Fragment>\r\n    )\r\n    \r\n    const authLinks = () => (\r\n        <a href='#' className='nav-link' onClick={ logout }>Logout</a>\r\n    )\r\n\r\n\r\n    \r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <Link to='/' className='navbar-brand' >AuthSystem</Link>\r\n            <button \r\n                className='navbar-toggler' \r\n                type='button' \r\n                data-toggle='collapse' \r\n                data-target='#navbarNavAltMarkup' \r\n                aria-controls='navbarNavAltMarkup' \r\n                aria-expanded='false' \r\n                aria-label='Toggle navigation'\r\n            >\r\n                <span className='navbar-toggler-icon'></span>\r\n            </button>\r\n            <div className='collapse navbar-collapse' id='navbarNavAltMarkup'>\r\n                <div className='navbar-nav'>\r\n                <Link to='/' className='nav-link active' >Home <span className='sr-only'>(current)</span></Link>\r\n                {isAuthenticated ? authLinks() : guestLinks()}\r\n                </div>\r\n            </div>\r\n       </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  })\r\n  \r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React, { useEffect } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth'\r\nconst Layout = (props) => {\r\n  \r\n  useEffect(() => {\r\n    props.checkAuthenticated();\r\n    props.load_user();\r\n  }, [])\r\n  \r\n  return (\r\n      <div>\r\n        <Navbar />\r\n        {props.children}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport Signup from \"./containers/Signup\";\r\nimport Activate from \"./containers/Activate\";\r\nimport ResetPassword from \"./containers/ResetPassword\";\r\nimport ResetPasswordConfirm from \"./containers/ResetPasswordConfirm\";\r\nimport Layout from \"./hocs/Layout\";\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/reset-password\" component={ResetPassword} />\r\n          <Route\r\n            path=\"/password/reset/confirm/:uid/:token\"\r\n            component={ResetPasswordConfirm}\r\n          />\r\n          <Route path=\"/activate/:uid/:token\" component={Activate} />\r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}